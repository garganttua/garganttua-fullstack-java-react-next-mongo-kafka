services:
#  redis:
#    image: redis:7.4-alpine
#    ports:
#      - 6379:6379
#    environment:
#      ALLOW_EMPTY_PASSWORD: yes 

  noghost-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
    networks:
      - noghost-network

  noghost-site:
    image: noghost.fr:latest
    depends_on:
      - noghost-kafka
      - noghost-mongo
    volumes:
      - noghost-bus-data:/data/bus:rw
    networks:
      - noghost-network
    environment:
      - DB_URL=mongodb://backend:backend@noghost-mongo:27017/noghost-site
      - KAFKA_URL=noghost-kafka:29092&maxPollRecords=1&enableAutoCommit=false&autoOffsetReset=latest&partitionsAutoScalling=true&allowAutoCreateTopics=true
    restart: always

  noghost-mongo:
    image: mongo:latest
    networks:
      - noghost-network
    volumes:
      - noghost-mongo-data:/data/db
      - ./noghost-mongo.js:/docker-entrypoint-initdb.d/noghost-mongo.js
    restart: always

  noghost-nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    networks:
      - noghost-network
    volumes:
      - ./noghost-nginx.conf:/etc/nginx/nginx.conf:ro 
      - ./noghost-certs/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
      - ./noghost-certs/privkey.pem:/etc/nginx/certs/privkey.pem:ro
    restart: always

  noghost-kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - noghost-zookeeper
    networks:
      - noghost-network
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: noghost-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://noghost-kafka:9092,PLAINTEXT_HOST://noghost-kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  noghost-mongo-data:
  noghost-bus-data:

networks:
  noghost-network:
    driver: bridge
